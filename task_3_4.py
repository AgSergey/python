'''
Программа принимает действительное положительное число x и целое отрицательное число
y. Выполните возведение числа x в степень y. Задание реализуйте в виде функции
my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения
числа в степень
'''


def power_1(base, degree):
    '''
    Функция принимает действительное положительное число x и целое
    отрицательное число y, ЧИСЛО Y МОЖЕТ БЫТЬ И ПОЛОЖИТЕЛЬНЫМ МНЕ ТАК ЗАХОТЕЛОСЬ.
    Возводит число x в степень y по алгоритму x ** y

    :param base: основание степени числа x
    :param degree: степень числа y
    :return: результат число возведения х в степень у

    >>>power_1(base, degree)
    '''
    answer = base ** abs(degree)
    if degree < 0: answer = 1 / answer  # Отклонение от задачи. Мне так захотелось
    return answer


def power_2(base, degree):
    '''
    Функция принимает действительное положительное число x и целое
    отрицательное число y, ЧИСЛО Y МОЖЕТ БЫТЬ И ПОЛОЖИТЕЛЬНЫМ МНЕ ТАК ЗАХОТЕЛОСЬ.
    Возводит число x в степень y по алгоритму в ЦИКЛЕ
    :param base: основание степени числа x
    :param degree: степень числа y
    :return: результат число возведения х в степень у

    >>>power_2(base, degree)
    '''
    if degree == 0:
        answer_p = 1
    elif degree == 1:
        answer_p = base
    else:
        answer_p = base
        for i in range(2, abs(degree) + 1, 1):
            answer_p = answer_p * base

    if degree < 0: answer_p = 1 / answer_p  # Отклонение от задачи. Мне так захотелось

    return answer_p


# Данные основания и степени числа для ввода в функии
base = 2
degree = 7

answer = power_1(base, degree)
print(f'\nРешение способом X ** Y\nЧисло {base} в степени {degree} = {answer}\n')
answer = power_2(base, degree)
print(f'Решение способом ЦИКЛА\nЧисло {base} в степени {degree} = {answer}')
