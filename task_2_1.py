"""Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя,
а указать явно, в программе.
Сделал сам."""

# Шаблоны ответов результата сравнения списков
answer_yes = 'Список эталонный совпадает по типам данных с исследуемым списком'
answer_no = 'Список эталонный НЕ совпадает по типам данных исследуемого списка'
answer_numb_no = 'Список эталонный НЕ совпадает по длине с исследуемым списком'
match = False  # Совпадение
numb = 0  # Номер несовпадающего элемента в проверяемом списке

# Шаблон типов данных списка. Эталонный список.
typ_list = ['str', 0.0, 0, 'str', (), {}, ]

# Исследуемый список данных
lists_1 = ['name', 1.5, 17, 'liter', (), {}]

print(f'Эталонный список\n{typ_list[:]}\n')
print(f'Исследуемый список\n{lists_1[:]}\n')

a = len(typ_list)
b = len(lists_1)
print(f'Длина эталонного списка {a}\n'
      f'Длина исследуемого списка {b}\n')

if a == b:
    print('Вывод номеров и типов совпадающих элементов\n')
    for i in range(0, a, 1):
        if type(typ_list[i]) == type(lists_1[i]):
            match = True
            print(f'{i} элемент Эталонного списка {type(typ_list[i])}, Исследуемого списка {type(lists_1[i])}')
        else:
            match = False
            numb = i
            print(f'{answer_no} по элементу с номером {numb}\n')
            break

else:
    print(f'{answer_numb_no}\n')
    match = False

# Вывод ответа
if match == True:
    print(f'\nОтвет:\n{answer_yes}')
else:
    print(f'Ответ:\n{answer_no}')
